<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RIDING BYTES</title>
    <link>http://ridingbytes.com/</link>
    <description>Recent content on RIDING BYTES</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, RIDING BYTES; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Jan 2016 11:44:06 +0100</lastBuildDate>
    <atom:link href="http://ridingbytes.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Odoo: Dynamic image resizing</title>
      <link>http://ridingbytes.com/2016/01/04/odoo-dynamic-image-resizing/</link>
      <pubDate>Mon, 04 Jan 2016 11:44:06 +0100</pubDate>
      
      <guid>http://ridingbytes.com/2016/01/04/odoo-dynamic-image-resizing/</guid>
      <description>

&lt;h1 id=&#34;odoo-scale-images-on-the-fly:be6a283372191872c3bb5719c603d50b&#34;&gt;Odoo: Scale images on the fly&lt;/h1&gt;

&lt;p&gt;Odoo uses Python Imaging Library (PIL) to support image resizing on the fly.
This functionality ships with the &lt;code&gt;image.py&lt;/code&gt; module, which is located in
&lt;code&gt;openerp.tools.image&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;problem:be6a283372191872c3bb5719c603d50b&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;I implemented a custom model which defined a binary field called &lt;code&gt;image&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;MyModel&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(models&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Model):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my.model&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Binary(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Image&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;True)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image_filename&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Char(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Image Filename&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I wanted to use this model within in a website view, but struggled with finding
a suitable image source URL for the image field. Unfortunately it was only
possible to access the &lt;code&gt;base64&lt;/code&gt; encoded image data.&lt;/p&gt;

&lt;p&gt;Thus, I ended up using the inline data option within the &lt;code&gt;src&lt;/code&gt; attribute of the
image tag:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;img&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;t-attf-src=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;data:image/jpg;base64,{{ my.model.image }}&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This actually worked quite well, but using the raw &lt;code&gt;base64&lt;/code&gt; data within the
HTML feels kind of awkward to me and it also uses the full image size, which
was not suitable for me.&lt;/p&gt;

&lt;h2 id=&#34;solution:be6a283372191872c3bb5719c603d50b&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Odoo&amp;rsquo;s &lt;code&gt;website&lt;/code&gt; addon ships with a controller, which allows to access image
fields of any model through an URL. This controller is located in
&lt;code&gt;odoo/addons/website/controllers/main.py&lt;/code&gt; and offers this route:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;@http.route&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;([&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;/website/image&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;/website/image/&amp;lt;model&amp;gt;/&amp;lt;id&amp;gt;/&amp;lt;field&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;/website/image/&amp;lt;model&amp;gt;/&amp;lt;id&amp;gt;/&amp;lt;field&amp;gt;/&amp;lt;int:max_width&amp;gt;x&amp;lt;int:max_height&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;auth&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;public&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;website&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;True,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;multilang&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;False)&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;website_image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(self,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;model,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;id,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;field,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;max_width&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;None,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;max_height&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;None):&lt;/span&gt;
    &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&amp;quot; Fetches the requested field and ensures it does not go above&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    (max_width, max_height), resizing it if necessary.&lt;/span&gt;

&lt;span style=&#34;color: #e6db74&#34;&gt;    If the record is not found or does not have the requested field,&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    returns a placeholder image via :meth:`~.placeholder`.&lt;/span&gt;

&lt;span style=&#34;color: #e6db74&#34;&gt;    Sets and checks conditional response parameters:&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    * :mailheader:`ETag` is always set (and checked)&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    * :mailheader:`Last-Modified is set iif the record has a concurrency&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;      field (``__last_update``)&lt;/span&gt;

&lt;span style=&#34;color: #e6db74&#34;&gt;    The requested field is assumed to be base64-encoded image data in&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    all cases.&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this route, I could change my inline rendered image to use this URL and do
the resizing as well:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;img&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;t-attf-src=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/website/image/my.model/{{ my.model.id }}/image/128x128&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;going-further:be6a283372191872c3bb5719c603d50b&#34;&gt;Going further&lt;/h2&gt;

&lt;p&gt;As I could use this nice URL to access the image of my custom model, I thought
about using an attribute on the model to provide the scaled image directly.
Therefore I changed the code of my model and added the fields &lt;code&gt;image_medium&lt;/code&gt;
and &lt;code&gt;image_small&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;MyModel&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(models&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Model):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my.model&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Binary(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Image&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;True)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image_filename&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Char(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Image Filename&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color: #75715e&#34;&gt;# Scaled Images&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image_medium&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Binary(string&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Medium-sized image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
                                 &lt;span style=&#34;color: #f8f8f2&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;False,&lt;/span&gt;
                                 &lt;span style=&#34;color: #f8f8f2&#34;&gt;compute&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;_get_image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
                                 &lt;span style=&#34;color: #f8f8f2&#34;&gt;help&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Medium-sized image of this model. It is automatically &amp;quot;&lt;/span&gt; \
                                      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;resized as a 128x128px image, with aspect ratio preserved. &amp;quot;&lt;/span&gt; \
                                      &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Use this field in form views or some kanban views.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image_small&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Binary(string&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Small-sized image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
                                &lt;span style=&#34;color: #f8f8f2&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;False,&lt;/span&gt;
                                &lt;span style=&#34;color: #f8f8f2&#34;&gt;compute&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;_get_image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt;
                                &lt;span style=&#34;color: #f8f8f2&#34;&gt;help&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Small sized image of this model. It is automatically &amp;quot;&lt;/span&gt; \
                                     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;resized as a 64x64px image, with aspect ratio preserved. &amp;quot;&lt;/span&gt; \
                                     &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Use this field in form views or some kanban views.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;figure class=&#34;image-left&#34;&gt;
    
        &lt;img src=&#34;http://ridingbytes.com/media/blog/odoo-dynamic-image-resizing.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;I also wanted to prevent that the images get stored in the database, to avoid
unnecessary data growth. Therefore I used a computed field
(&lt;code&gt;compute=&amp;quot;_get_image&amp;quot;&lt;/code&gt;) and passed in the &lt;code&gt;store=False&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;My first shot of the &lt;code&gt;_get_image&lt;/code&gt; method looked like this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;MyModel&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(models&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Model):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my.model&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;

    &lt;span style=&#34;color: #a6e22e&#34;&gt;@api.one&lt;/span&gt;
    &lt;span style=&#34;color: #a6e22e&#34;&gt;@api.depends&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;_get_image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(self):&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&amp;quot; calculate the images sizes and set the images to the corresponding&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;            fields&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt;

        &lt;span style=&#34;color: #f8f8f2&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;tools&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_get_resized_images(image)&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_medium&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_medium&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_small&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_small&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I was unlucky again, since this code worked exactly once, and that was when the
&lt;code&gt;image&lt;/code&gt; field was initially set.&lt;/p&gt;

&lt;p&gt;The problem was, that after the &lt;code&gt;image&lt;/code&gt; field was set, a &lt;code&gt;context&lt;/code&gt; variable
with the name &lt;code&gt;bin_size&lt;/code&gt; and the value &lt;code&gt;True&lt;/code&gt; was set, which instructed the
image field to return only the image size instead of the full &lt;code&gt;base64&lt;/code&gt; encoded
image. The complete &lt;code&gt;context&lt;/code&gt; I inspected within this method looked like this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;ipdb&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;context&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;en_US&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;bin_size&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;True,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;tz&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Europe/Berlin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;uid&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;I found the corresponding field definition for the binary field in &lt;code&gt;openerp.osv.fields&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;binary&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(_column):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_type&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;binary&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(self,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;cr,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;obj,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;ids,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;name,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;None,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;None,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;None):&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;

        &lt;span style=&#34;color: #75715e&#34;&gt;# If client is requesting only the size of the field, we return it instead&lt;/span&gt;
        &lt;span style=&#34;color: #75715e&#34;&gt;# of the content. Presumably a separate request will be done to read the actual&lt;/span&gt;
        &lt;span style=&#34;color: #75715e&#34;&gt;# content if it&amp;#39;s needed at some point.&lt;/span&gt;
        &lt;span style=&#34;color: #75715e&#34;&gt;# TODO: after 6.0 we should consider returning a dict with size and content instead of&lt;/span&gt;
        &lt;span style=&#34;color: #75715e&#34;&gt;#       having an implicit convention for the value&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;get(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;bin_size_%s&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;name,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;get(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;bin_size&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)):&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;res[i]&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;tools&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;human_size(long(val))&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;After some research I figured out that it is possible to overwrite this
immutable &lt;code&gt;context&lt;/code&gt; with the method &lt;code&gt;with_context&lt;/code&gt; on the model itself.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://odoo-new-api-guide-line.readthedocs.org/en/latest/environment.html#modifing-environment&#34;&gt;http://odoo-new-api-guide-line.readthedocs.org/en/latest/environment.html#modifing-environment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the final version of my &lt;code&gt;_get_image&lt;/code&gt; method looked like this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;MyModel&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(models&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Model):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my.model&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;

    &lt;span style=&#34;color: #a6e22e&#34;&gt;@api.one&lt;/span&gt;
    &lt;span style=&#34;color: #a6e22e&#34;&gt;@api.depends&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;_get_image&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(self):&lt;/span&gt;
        &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;&amp;quot;&amp;quot; calculate the images sizes and set the images to the corresponding&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;            fields&lt;/span&gt;
&lt;span style=&#34;color: #e6db74&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt;

        &lt;span style=&#34;color: #75715e&#34;&gt;# check if the context contains the magic `bin_size` key&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;context&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;get(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;bin_size&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;):&lt;/span&gt;
            &lt;span style=&#34;color: #75715e&#34;&gt;# refetch the image with a clean context&lt;/span&gt;
            &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;env[self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;_name]&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;with_context({})&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;browse(self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;id)&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt;

        &lt;span style=&#34;color: #f8f8f2&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;tools&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_get_resized_images(image)&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_medium&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_medium&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #f8f8f2&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;image_small&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;data[&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_small&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Now it was possible to access the computed fields directly with the URL of the
&lt;code&gt;website&lt;/code&gt; controller:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;img&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;t-attf-src=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;/website/image/my.model/{{ my.model.id }}/image_small&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Or simply by the URL itself:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:8069/website/image/my.model/1/image_medium&#34;&gt;http://localhost:8069/website/image/my.model/1/image_medium&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;conclusion:be6a283372191872c3bb5719c603d50b&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The size calculation of the images takes some time and this should be
considered with regard to the servers performance. So I guess it makes
more sense to actually store the image scales in the database to avoid
this workaround described above.&lt;/p&gt;

&lt;p&gt;I also think that the workaround bypasses security, since it removes the &lt;code&gt;uid&lt;/code&gt;
from the context as well. But I didn&amp;rsquo;t investigate it any further.&lt;/p&gt;

&lt;p&gt;The whole excursion was more or less driven by curiosity, since I only found
instructions in the internet on how to do this using the old Odoo V7 API.&lt;/p&gt;

&lt;p&gt;The closest tutorial I found was this here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.odoo.yenthevg.com/saving-and-resizing-images-in-odoo-8&#34;&gt;http://www.odoo.yenthevg.com/saving-and-resizing-images-in-odoo-8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I hope this is useful for someone:)&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Odoo: Remember the filename of binary files</title>
      <link>http://ridingbytes.com/2016/01/02/odoo-remember-the-filename-of-binary-files/</link>
      <pubDate>Sat, 02 Jan 2016 19:26:32 +0100</pubDate>
      
      <guid>http://ridingbytes.com/2016/01/02/odoo-remember-the-filename-of-binary-files/</guid>
      <description>

&lt;h1 id=&#34;odoo-remember-the-filename-of-binary-files:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;Odoo: Remember the filename of binary files&lt;/h1&gt;

&lt;h2 id=&#34;problem:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;Problem&lt;/h2&gt;

&lt;p&gt;I wanted to use a binary field to store image data to a custom model.
Therefore I used a field of the type &lt;code&gt;Binary&lt;/code&gt; in my model. Unfortunately only
the base64 encoded file was stored in the database but not the filename. This
resulted in an unknown binary file download with the name of the current model.&lt;/p&gt;

&lt;h2 id=&#34;solution:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Luckily I found a solution for this problem. First, I added another field to my
model to store the filename. The name of this field can be arbitrary.
The next step was to tell the image widget to use this field to store the filename:
&lt;code&gt;&amp;lt;field widget=&amp;quot;binary&amp;quot; height=&amp;quot;64&amp;quot; name=&amp;quot;image&amp;quot; filename=&amp;quot;image_filename&amp;quot; /&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Below is the full code listing to make it work:&lt;/p&gt;

&lt;h3 id=&#34;python-code:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;Python Code&lt;/h3&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;MyModel&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(models&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Model):&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;_name&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;my.model&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Binary(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;Image&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;required&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;True)&lt;/span&gt;
    &lt;span style=&#34;color: #f8f8f2&#34;&gt;image_filename&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;Char(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Image Filename&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;xml-view:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;XML View&lt;/h3&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;record&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;view_form_my_model&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;model=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;ir.ui.view&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;field&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;My Model Form&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;field&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;my.model&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;field&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;arch&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;xml&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;sheet&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;group&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;group_top&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;group&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;group_left&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;field&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_filename&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;invisible=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;field&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;widget=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;height=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;64&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;filename=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;image_filename&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;group&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;group_right&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/sheet&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #f92672&#34;&gt;&amp;lt;/record&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;result:51dcd0e056b827b692cfb67aa92761b8&#34;&gt;Result&lt;/h2&gt;

&lt;p&gt;The download works now like a charm and it is even possible to modify the
filename directly.&lt;/p&gt;

&lt;p&gt;
&lt;figure class=&#34;image-left&#34;&gt;
    
        &lt;img src=&#34;http://ridingbytes.com/media/blog/odoo-filename-handling.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RIDING BYTES-Bika Labs-Partnership</title>
      <link>http://ridingbytes.com/2015/12/17/riding-bytes-bika-labs-partnership/</link>
      <pubDate>Thu, 17 Dec 2015 21:53:09 +0100</pubDate>
      
      <guid>http://ridingbytes.com/2015/12/17/riding-bytes-bika-labs-partnership/</guid>
      <description>

&lt;h1 id=&#34;riding-bytes-bika-labs-partnership:097114a2a17769020b00fc1c5cf37c2f&#34;&gt;RIDING BYTES / Bika Labs - Partnership&lt;/h1&gt;

&lt;!-- &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;More than just a Company – A strong Network of Partners.&amp;#10;RIDING BYTES is now official Partner of Bika Lab Systems &lt;a href=&#34;https://t.co/07B6ap3DMO&#34;&gt;https://t.co/07B6ap3DMO&lt;/a&gt;&lt;/p&gt;&amp;mdash; RIDING BYTES (@ridingbytes) &lt;a href=&#34;https://twitter.com/ridingbytes/status/677201899674800129&#34;&gt;December 16, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;Since December 15, 2015 RIDING BYTES and Bika Labs (South Africa) are official Partners.&lt;/p&gt;

&lt;h2 id=&#34;about:097114a2a17769020b00fc1c5cf37c2f&#34;&gt;About&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://bikalabs.com&#34;&gt;Bika Labs&lt;/a&gt; provides up-market Open Source
&lt;a href=&#34;https://en.wikipedia.org/wiki/Laboratory_information_management_system&#34;&gt;Laboratory Information Management Systems&lt;/a&gt;
based on the enterprise &lt;a href=&#34;https://plone.org&#34;&gt;CMS Plone&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;RIDING BYTES supports Bika Labs with interfacing LIMS to other systems and
mobile application development.&lt;/p&gt;

&lt;p&gt;Looking forward to many interesting projects and a lot of technical opportunities.&lt;/p&gt;

&lt;p&gt;
&lt;figure class=&#34;image-left&#34;&gt;
    
        &lt;img src=&#34;http://ridingbytes.com/media/blog/bika-partnership.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;!-- &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Talking about possibilities to interface Bika LIMS with external systems using Plone JSON API at &lt;a href=&#34;https://twitter.com/hashtag/B3Africa?src=hash&#34;&gt;#B3Africa&lt;/a&gt; &lt;a href=&#34;https://t.co/UPIumZWrZz&#34;&gt;pic.twitter.com/UPIumZWrZz&lt;/a&gt;&lt;/p&gt;&amp;mdash; RIDING BYTES (@ridingbytes) &lt;a href=&#34;https://twitter.com/ridingbytes/status/676372319506444288&#34;&gt;December 14, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RIDING BYTES Website</title>
      <link>http://ridingbytes.com/portfolio/ridingbytes/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ridingbytes.com/portfolio/ridingbytes/</guid>
      <description>

&lt;h1 id=&#34;overview:b3e3419bd41c8c3b6ff5162fccbbabaa&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;The RIDING BYTES website is based on a general-purpose website framework called
&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. Unlike systems like WordPress, Ghost and Drupal, &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; doesn’t depend
on administrative privileges, databases, runtimes, interpreters or external
libraries. It creates the website only once, when you create new content.&lt;/p&gt;

&lt;h2 id=&#34;about:b3e3419bd41c8c3b6ff5162fccbbabaa&#34;&gt;About&lt;/h2&gt;

&lt;p&gt;Sites built with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; are extremely fast and very secure. &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; sites can be
hosted anywhere, including &lt;a href=&#34;https://www.heroku.com&#34;&gt;Heroku&lt;/a&gt;, &lt;a href=&#34;https://www.godaddy.com&#34;&gt;GoDaddy&lt;/a&gt;, &lt;a href=&#34;http://www.dreamhost.com/&#34;&gt;DreamHost&lt;/a&gt;, &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;,
&lt;a href=&#34;http://cloud.google.com/storage/&#34;&gt;Google Cloud Storage&lt;/a&gt;, &lt;a href=&#34;http://aws.amazon.com/s3&#34;&gt;Amazon S3&lt;/a&gt; and &lt;a href=&#34;http://aws.amazon.com/cloudfront&#34;&gt;CloudFront&lt;/a&gt;, and work well with CDNs.
&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; sites run without dependencies on expensive runtimes like Ruby, Python or
PHP and without dependencies on any databases.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://ridingbytes.com/about/about/</link>
      <pubDate>Thu, 24 Sep 2015 14:18:03 +0200</pubDate>
      
      <guid>http://ridingbytes.com/about/about/</guid>
      <description>

&lt;h1 id=&#34;riding-bytes:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;RIDING BYTES&lt;/h1&gt;

&lt;p&gt;RIDING BYTES was founded on July, 2nd 2015. Ramon Bartl, the owner
of the company, holds a degree in applied computer sciences and has
over 10 years of experience in web development.&lt;/p&gt;

&lt;p&gt;The company name is a homage to the lately experienced partnership with the
owners horse &amp;ldquo;Lucky&amp;rdquo;. It also symbolizes the relation between the company and
its customers, which is based on trust, goodwill and a mutual understanding
based on communication.&lt;/p&gt;

&lt;p&gt;The rearing horse in the logo stands for the power, beauty and the freedom of
the software solutions the company provides.&lt;/p&gt;

&lt;h1 id=&#34;mission:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Mission&lt;/h1&gt;

&lt;p&gt;The company was started for one single reason: To build better software for
human beings. Therefore our mission is to build software solutions, using the
most sophisticated and modern technologies available on the market. Always
aligned with our strategy: To support free and open source software.&lt;/p&gt;

&lt;h1 id=&#34;vision:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Vision&lt;/h1&gt;

&lt;p&gt;Our vision is a world where the internet is the platform for computer systems.
Where data from different sources are available through a single user
interface, like a web browser. Where information is displayed when needed, just
in the right moment. Where the software adapts to the user and not vice versa.&lt;/p&gt;

&lt;h1 id=&#34;strategy:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Strategy&lt;/h1&gt;

&lt;p&gt;Our strategy is to provide free and open source software whenever possible.
Give and you will receive. This simple but true wisdom is the core belief of
the company and its members. Only with the power of the whole mankind it is
possible to create something great. Empowering the people worldwide to their
full potential.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plone Commander</title>
      <link>http://ridingbytes.com/2015/09/23/plone-commander/</link>
      <pubDate>Wed, 23 Sep 2015 20:26:22 +0200</pubDate>
      
      <guid>http://ridingbytes.com/2015/09/23/plone-commander/</guid>
      <description>

&lt;h1 id=&#34;plone-commander:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;Plone Commander&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ridingbytes/plone.commander/releases&#34;&gt;Plone Commander&lt;/a&gt; is a
cross platform application built with &lt;a href=&#34;https://www.sencha.com/products/extjs&#34;&gt;ExtJS&lt;/a&gt;
and &lt;a href=&#34;https://github.com/atom/electron&#34;&gt;Electron&lt;/a&gt;. It allows you to find, view,
edit and explore Plone contents with ease.&lt;/p&gt;

&lt;p&gt;It is free, open source and &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt; licensed.&lt;/p&gt;

&lt;!--
&lt;figure class=&#34;e-block-skin image-left&#34;&gt;
    
        &lt;img src=&#34;http://ridingbytes.com/media/blog%20%20/plone-commander.jpg&#34; width=&#34;85%&#34; /&gt;
    
    
&lt;/figure&gt;
--&gt;

&lt;h2 id=&#34;what-is-it-about:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;What is it about?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ridingbytes/plone.commander&#34;&gt;Plone Commander&lt;/a&gt; is basically a proof of
concept, if the &lt;a href=&#34;https://pypi.python.org/pypi/plone.jsonapi.routes&#34;&gt;Plone API&lt;/a&gt; is capable
of handling an external application like this.&lt;/p&gt;

&lt;h2 id=&#34;where-to-get:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;Where to get?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ridingbytes/plone.commander/releases&#34;&gt;Plone Commander&lt;/a&gt; is
available on the official RIDING BYTES &lt;a href=&#34;https://github.com/ridingbytes&#34;&gt;GitHub Account&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;see-it-in-action:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;See it in action&lt;/h2&gt;

&lt;p&gt;&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/h9Bc37_eutE&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Legal Notice</title>
      <link>http://ridingbytes.com/legal/</link>
      <pubDate>Tue, 22 Sep 2015 15:09:25 +0200</pubDate>
      
      <guid>http://ridingbytes.com/legal/</guid>
      <description>

&lt;h1 id=&#34;legal-information:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Legal Information&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;RIDING BYTES UG (haftungsbeschränkt)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Einöde 49A&lt;/p&gt;

&lt;p&gt;87474 Buchenberg&lt;/p&gt;

&lt;p&gt;Registration Court: Amtsgericht Ulm&lt;/p&gt;

&lt;p&gt;Commercial Register Number: HRB 732278&lt;/p&gt;

&lt;p&gt;USt-IdNr. (VAT No.): DE301668607&lt;/p&gt;

&lt;p&gt;Managing Director: Ramon Bartl&lt;/p&gt;

&lt;p&gt;Responsible for the content: Ramon Bartl&lt;/p&gt;

&lt;h2 id=&#34;contact:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Contact&lt;/h2&gt;

&lt;p&gt;Mail: &lt;a href=&#34;mailto:hello@ridingbytes.com&#34;&gt;hello@ridingbytes.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internet: &lt;a href=&#34;http://ridingbytes.com&#34;&gt;http://ridingbytes.com&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h1 id=&#34;disclaimer:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Disclaimer&lt;/h1&gt;

&lt;h3 id=&#34;inhalt:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Inhalt&lt;/h3&gt;

&lt;p&gt;Die RIDING BYTES UG stellt die Inhalte dieser Internetseiten mit großer Sorgfalt
zusammen. Jedoch übernehmen wir keine Gewähr für die Aktualität, Richtigkeit und
Vollständigkeit der Informationen auf diesen Seiten oder den jederzeitigen
störungsfreien Zugang. RIDING BYTES behält sich vor, Teile der Seiten ohne
gesonderte Ankündigung zu verändern, zu ergänzen, zu löschen oder die
Veröffentlichung zeitweise einzustellen.&lt;/p&gt;

&lt;h3 id=&#34;verweise-links-und-download:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Verweise/Links und Download&lt;/h3&gt;

&lt;p&gt;Bei direkten oder indirekten Verweisen auf die Internetseiten Dritter (&amp;ldquo;Links&amp;rdquo;),
übernimmt RIDING BYTES keine Verantwortung für die Inhalte der verlinkten
Seiten. Mit dem Betätigen des Verweises verlassen Sie das Informationsangebot
von RIDING BYTES. Für die Angebote Dritter können daher abweichende Regelungen
gelten, insbesondere hinsichtlich des Datenschutzes.&lt;/p&gt;

&lt;p&gt;Weiterhin schließt RIDING BYTES ihre Haftung bei Serviceleistungen, insbesondere
beim Download von durch RIDING BYTES zur Verfügung gestellten Daten, aus.&lt;/p&gt;

&lt;h3 id=&#34;autoren-urheber-und-kennzeichnungsrecht:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Autoren-, Urheber- und Kennzeichnungsrecht&lt;/h3&gt;

&lt;p&gt;Alle innerhalb des Internetpräsenz genannten und ggfs. durch Dritte geschützte
Marken- und Warenzeichen unterliegen uneingeschränkt den Bestimmungen des
jeweils gültigen Kennzeichnungsrechts und den Besitzrechten der jeweiligen
eingetragenen Eigentümer. Allein aufgrund der bloßen Nennung ist nicht der
Schluss zu ziehen, dass Markenzeichen nicht durch Rechte Dritter geschützt sind.&lt;/p&gt;

&lt;h3 id=&#34;datenschutz:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Datenschutz&lt;/h3&gt;

&lt;p&gt;Wenn innerhalb des Internetpräsenz die Möglichkeit zur Angabe persönlicher
und/oder geschäftlicher Daten (e-Mail-Adresse, Namen, Anschrift etc.)
wahrgenommen wird, dann erfolgt die Freigabe dieser Daten seitens des Adressaten
auf ausdrücklich freiwilliger Basis. Wird das Einverständnis zur Nennung bzw.
Verwaltung solcher Daten zurückgezogen, dann ist RIDING BYTES verpflichtet,
umgehend die vollständige Löschung dieser Daten vorzunehmen.&lt;/p&gt;

&lt;h3 id=&#34;copyright:7d11b95da6f13f352e32f5af2c24f251&#34;&gt;Copyright&lt;/h3&gt;

&lt;p&gt;Alle Texte, Bilder und andere auf der Internetpräsenz veröffentlichte Werke
unterliegen - sofern nicht anders gekennzeichnet - dem Copyright der RIDING
BYTES UG. Jede Vervielfältigung, Verbreitung, Speicherung, Übermittlung, Sendung
und Wieder- bzw. Weitergabe der Inhalte ist ohne schriftliche Genehmigung von
RIDING BYTES ausdrücklich untersagt.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;container rb-divider&#34;&gt;
  &lt;div class=&#34;row&#34;&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;e-block-centered&#34;&gt;
      &amp;mdash; &lt;img src=&#34;http://ridingbytes.com/img/rb_logo_32x32.png&#34; /&gt; &amp;mdash;
    &lt;/div&gt;
    &lt;div class=&#34;dividewhite2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RIDING BYTES</title>
      <link>http://ridingbytes.com/contact/contact/</link>
      <pubDate>Tue, 22 Sep 2015 10:55:01 +0200</pubDate>
      
      <guid>http://ridingbytes.com/contact/contact/</guid>
      <description>&lt;p&gt;RIDING BYTES UG (haftungsbeschränkt)&lt;/p&gt;

&lt;p&gt;Einöde 49A, 87474 Buchenberg, Germany&lt;/p&gt;

&lt;p&gt;Mail: &lt;a href=&#34;mailto:hello@ridingbytes.com&#34;&gt;hello@ridingbytes.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web: &lt;a href=&#34;http://ridingbytes.com&#34;&gt;http://ridingbytes.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Development</title>
      <link>http://ridingbytes.com/services/development/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>http://ridingbytes.com/services/development/</guid>
      <description>

&lt;h1 id=&#34;development:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Development&lt;/h1&gt;

&lt;p&gt;RIDING BYTES offers a variety of custom development services. Starting from small
scripts for task automation or data manipulation, up to enterprise server based
solutions, like content management systems or enterprise resource planning
systems.&lt;/p&gt;

&lt;p&gt;The next sections provide a small overview of used systems, technologies
and the provided services.&lt;/p&gt;

&lt;h2 id=&#34;python:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Python&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt; is a modern, powerful and fast programming
language, that runs on all platforms. It is successfully used in thousands of
real-world business applications around the world, including many large and
mission critical system.&lt;/p&gt;

&lt;p&gt;We offer custom tailored programs built with &lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt;, starting
from a small command line script up to full web systems.&lt;/p&gt;

&lt;h2 id=&#34;plone:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Plone&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://plone.org&#34;&gt;Plone&lt;/a&gt; is one of the biggest and most popular content
management solutions which uses &lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt; under the hood. It
has been actively developed since 2001, is available in more than 40 languages,
and has the best security track record of any major CMS. It is owned by the
Plone Foundation, a 501&amp;copy;(3) not-for-profit organization, and is available for
all major operating systems.&lt;/p&gt;

&lt;p&gt;We offer full service and customization for &lt;a href=&#34;http://plone.org&#34;&gt;Plone&lt;/a&gt;,
integrate it in your new or existing infrastructure and support you with the
necessary consultancy and trainings.&lt;/p&gt;

&lt;h2 id=&#34;odoo:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Odoo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.odoo.com&#34;&gt;Odoo&lt;/a&gt; is another open source enterprise resource planning
(ERP) and customer relations management (CRM) system, which is built with
&lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt;. The main applications included in
&lt;a href=&#34;http://www.odoo.com&#34;&gt;Odoo&lt;/a&gt; are an Open Source CRM, Website Builder, eCommerce,
Project Management, Billing &amp;amp; Accounting, Point of Sale, Human Resources,
Marketing, Manufacturing, Purchase Management.&lt;/p&gt;

&lt;p&gt;We offer full service and customization for &lt;a href=&#34;http://www.odoo.com&#34;&gt;Odoo&lt;/a&gt;,
integrate it in your new or existing infrastructure and support you with the
necessary consultancy and trainings.&lt;/p&gt;

&lt;h2 id=&#34;flask:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Flask&lt;/h2&gt;

&lt;p&gt;You want to build your custom server solution from scratch? Than
&lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; is the right solution.
&lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; is a microframework for
&lt;a href=&#34;http://python.org&#34;&gt;Python&lt;/a&gt; based on Werkzeug, Jinja 2 and good intentions.  It
can basically handle any database backend and ships with powerful extensions.&lt;/p&gt;

&lt;p&gt;We offer complete support in the planning of the architecture and the development of
any &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; based solution.&lt;/p&gt;

&lt;h2 id=&#34;extjs:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;ExtJS&lt;/h2&gt;

&lt;p&gt;Desktop application? Mobile/Phone application? Both?
&lt;a href=&#34;https://www.sencha.com/products/extjs&#34;&gt;ExtJS&lt;/a&gt; provides a solution for all
devices. &lt;a href=&#34;https://www.sencha.com/products/extjs&#34;&gt;ExtJS&lt;/a&gt; is a sophisticated
JavaScript framework with the capability to build enterprise applications, which
handles thousands of data records with great performance.&lt;/p&gt;

&lt;p&gt;We provide the full service, starting from the planning phase up to development
and hosting. Powered by &lt;a href=&#34;https://github.com/atom/electron&#34;&gt;Electron&lt;/a&gt;, it is even
possible to run dedicated applications on MacOS, Linux and Windows.&lt;/p&gt;

&lt;h2 id=&#34;hugo:c51f1b783d6e6b3bc97ce5906e9605d3&#34;&gt;Hugo&lt;/h2&gt;

&lt;p&gt;You want to have a static website? Something that does not depend on
administrative privileges, databases, runtimes, interpreters or external
libraries? Than probably &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; is the right thing for you.
Sites built with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; can be deployed on S3, GitHub Pages,
Dropbox or any web host.&lt;/p&gt;

&lt;p&gt;We offer a full integration and customization from any web based template for
&lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. Either you offer a template, choose a nice one
from &lt;a href=&#34;https://wrapbootstrap.com/themes&#34;&gt;{wrap}bootstrap&lt;/a&gt;, or we assemble one for
you based on a mock up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UIUX</title>
      <link>http://ridingbytes.com/services/uiux/</link>
      <pubDate>Mon, 21 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>http://ridingbytes.com/services/uiux/</guid>
      <description>

&lt;h1 id=&#34;ui-ux:bf92aecb4a13be047ab9446fb93b6fd0&#34;&gt;UI/UX&lt;/h1&gt;

&lt;p&gt;These two terms stand for &lt;em&gt;User Interface&lt;/em&gt; and &lt;em&gt;User Experience&lt;/em&gt;. While the
first one is mainly concerned with the layout of application elements, the
latter one cares about how the interaction with the application feels to the user.&lt;/p&gt;

&lt;p&gt;Both terms are linked to each other and highly influence the user acceptance of
the finished application/product.&lt;/p&gt;

&lt;p&gt;RIDING BYTES is specialized in web based user interfaces, which provide a great
user experience by logical application flows and an intuitive layout.  We offer
consulting, support and development of custom web-, mobile-, or desktop
applications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Consulting</title>
      <link>http://ridingbytes.com/services/consulting/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>http://ridingbytes.com/services/consulting/</guid>
      <description>

&lt;h1 id=&#34;consulting:a25d6bd4dcb7d62219c6846057abf7cb&#34;&gt;Consulting&lt;/h1&gt;

&lt;p&gt;Communication is the key for a successful partnership in business relations and
horseback riding. We offer consulting services, to understand the needs and the
requirement of our customers and to provide the professional expertise of all
our knowledge.&lt;/p&gt;

&lt;p&gt;We offer in house consulting services to analyze current workflows, optimize
business processes and find the right IT solutions to support the management or
the staff to get their work done more effective and efficient.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Administration</title>
      <link>http://ridingbytes.com/services/administration/</link>
      <pubDate>Sat, 19 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>http://ridingbytes.com/services/administration/</guid>
      <description>

&lt;h1 id=&#34;administration:13211676e978b46d236d2a86bdb3cd25&#34;&gt;Administration&lt;/h1&gt;

&lt;p&gt;Every computer system need an optimal environment to work properly. It is
necessary to monitor, update and run several maintenance tasks on business
critical servers periodically.&lt;/p&gt;

&lt;p&gt;We provide support for the deployment and maintenance of our software solutions
or offer the complete service in house or remote through a secure tunnel
connection. We support servers based on Linux, MacOS or Windows and help you
with all administrative questions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plone JSON API</title>
      <link>http://ridingbytes.com/portfolio/plone-jsonapi/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ridingbytes.com/portfolio/plone-jsonapi/</guid>
      <description>

&lt;h1 id=&#34;overview:7066a99628bbca58c6cdd96152a54e17&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://api.travis-ci.org/collective/plone.jsonapi.routes.png?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is an add-on package for &lt;a href=&#34;https://github.com/collective/plone.jsonapi.core&#34;&gt;plone.jsonapi.core&lt;/a&gt; which provides resource URLs
for Plone standard contents (and more).&lt;/p&gt;

&lt;h1 id=&#34;motivation:7066a99628bbca58c6cdd96152a54e17&#34;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;The routes package is built on top of the &lt;a href=&#34;https://github.com/collective/plone.jsonapi.core&#34;&gt;plone.jsonapi.core&lt;/a&gt; package to allow
Plone developers to build modern (JavaScript) web UIs which communicate through
a &lt;a href=&#34;http://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;RESTful&lt;/a&gt; API with their Plone site.&lt;/p&gt;

&lt;h1 id=&#34;compatibility:7066a99628bbca58c6cdd96152a54e17&#34;&gt;Compatibility&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/collective/plone.jsonapi.routes&#34;&gt;plone.jsonapi.routes&lt;/a&gt; is compatible with &lt;a href=&#34;http://plone.org&#34;&gt;Plone&lt;/a&gt; 4.&lt;/p&gt;

&lt;h1 id=&#34;documentation:7066a99628bbca58c6cdd96152a54e17&#34;&gt;Documentation&lt;/h1&gt;

&lt;p&gt;Read the latest documentation: &lt;a href=&#34;http://plonejsonapiroutes.readthedocs.org&#34;&gt;http://plonejsonapiroutes.readthedocs.org&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;where-to-get:7066a99628bbca58c6cdd96152a54e17&#34;&gt;Where to get?&lt;/h1&gt;

&lt;p&gt;Get the latest version on the Python Package Index: &lt;a href=&#34;https://pypi.python.org/pypi/plone.jsonapi.routes&#34;&gt;https://pypi.python.org/pypi/plone.jsonapi.routes&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;see-it-in-action:7066a99628bbca58c6cdd96152a54e17&#34;&gt;See it in action&lt;/h1&gt;

&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/MiwgkWLMUqk&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Plone Commander</title>
      <link>http://ridingbytes.com/portfolio/plone-commander/</link>
      <pubDate>Sun, 06 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ridingbytes.com/portfolio/plone-commander/</guid>
      <description>

&lt;h1 id=&#34;overview:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;Overview&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ridingbytes/plone.commander/releases&#34;&gt;Plone Commander&lt;/a&gt; is a cross platform web application based on &lt;a href=&#34;http://electron.atom.io&#34;&gt;Electron&lt;/a&gt; and
&lt;a href=&#34;https://www.sencha.com/products/extjs&#34;&gt;ExtJS&lt;/a&gt;. It communicates with &lt;a href=&#34;http://plone.org&#34;&gt;Plone&lt;/a&gt; through &lt;a href=&#34;https://github.com/collective/plone.jsonapi.routes&#34;&gt;plone.jsonapi.routes&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;see-it-in-action:55b3f9dc2e501f8db8f4a408af8078fa&#34;&gt;See it in Action&lt;/h1&gt;

&lt;div class=&#34;embed video-player&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/h9Bc37_eutE&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
  </channel>
</rss>